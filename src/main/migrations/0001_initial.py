# Generated by Django 4.0.4 on 2022-06-01 09:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Universities',
            fields=[
                ('id', models.PositiveBigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('parent_id', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='parent ID')),
                ('name', models.CharField(max_length=1000, verbose_name='name')),
                ('short_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='short name')),
                ('name_en', models.CharField(blank=True, max_length=1000, null=True, verbose_name='name en')),
                ('phone', models.CharField(max_length=16, verbose_name='phone')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('site', models.CharField(blank=True, max_length=200, null=True, verbose_name='site')),
                ('address', models.CharField(max_length=400, verbose_name='address')),
                ('address_u', models.CharField(blank=True, max_length=400, null=True, verbose_name='address u')),
                ('is_from_crimea', models.BooleanField(default=False, verbose_name='is from crimea')),
                ('type_name', models.CharField(max_length=100, verbose_name='type name')),
                ('financing', models.CharField(blank=True, max_length=100, null=True, verbose_name='financing')),
                ('governance', models.CharField(blank=True, max_length=200, null=True, verbose_name='governance')),
                ('registration_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='registration year')),
                ('edrpou', models.PositiveIntegerField(verbose_name='edrpou')),
                ('post_index', models.PositiveIntegerField(verbose_name='post index')),
                ('post_index_u', models.PositiveIntegerField(blank=True, null=True, verbose_name='post index u')),
                ('koatuu_id', models.PositiveIntegerField(verbose_name='koatuu id')),
                ('koatuu_id_u', models.PositiveIntegerField(blank=True, null=True, verbose_name='koatuu id u')),
                ('region_name', models.CharField(max_length=200, verbose_name='region name')),
                ('region_name_u', models.CharField(blank=True, max_length=200, null=True, verbose_name='region name u')),
                ('koatuu_name', models.CharField(max_length=100, verbose_name='koatuu name')),
                ('koatuu_name_u', models.CharField(blank=True, max_length=100, null=True, verbose_name='koatuu name u')),
                ('director_post', models.CharField(blank=True, max_length=100, null=True, verbose_name='director post')),
                ('director_fio', models.CharField(blank=True, max_length=200, null=True, verbose_name='director fio')),
                ('close_date', models.DateField(blank=True, null=True, verbose_name='close date')),
                ('primitki', models.TextField(blank=True, null=True, verbose_name='primitki')),
                ('lat', models.FloatField(verbose_name='latitude')),
                ('lng', models.FloatField(verbose_name='longitude')),
            ],
            options={
                'verbose_name': 'university',
                'verbose_name_plural': 'universities',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.PositiveBigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='name')),
                ('universities', models.ManyToManyField(to='main.universities')),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'regions',
                'ordering': ('id',),
            },
        ),
    ]
